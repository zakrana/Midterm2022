Please answer the below core-java Questions:

What is programing language?
A. Programming language is a formal language comprising a set of instructions that produce various kinds of output.
   Programming languages are used in computer programming to implement algorithms. Most programming languages consist of
   instructions for computers.

What jdk contains or composed of and define each components?
A.  JDK contains these components:
   - Java language: Java is a programming language that the Java platform uses. Java is an object-oriented programming
    language whose syntax is derived from C and OOPS features are derived from C++.
   - The Java Development Kit (JDK): The JDK (Java Development Kit) allows developers to create Java applications and
    applets that can be executed and run by the JVM and JRE. The JDK is a software package you download in order to
    create Java-based applications. The JDK is an implementation of the Java platform specification, including compiler
     and class libraries.
    - The Java Runtime Environment (JRE): JRE, as the name suggests, is the runtime environment that is required to execute
    Java programs and applications. JRE consists of Java Virtual Machine (JVM) and binaries and other classes to successfully
     execute Java programs.
    - The Java Compiler: This is a compiler for Java programming language and its function is to generate Java class files
     from the Java source code. Java class file contains a platform-independent Java byte code.
    - The Java Virtual Machine (JVM): JVM is the center of Java programming language and Java platform. The JVM converts the
     byte code into machine-specific code (also known as object code in other programmer languages).

  What is IDE?
  A. IDE stands for Integrated Development Environment, it enables programmers to consolidate the different aspects of
  writing a computer program. Many IDEs provide features like syntax highlighting and code completion, which help the
  user to code more easily.

What are the IDEs available in the market to support java?
A.- Eclipse
  - IntelliJ
  - NetBeans
  - JDeveloper
  - MyEclipse
  - DrJava

Explain the entire java life cycle.
A. First, type the program in a text-editor, then we have to save the file(.java extension).It is a good convention to save
 the file with the name of the class.
 Second step is compilation. The name of the Java compiler is javac. The input to the compiler is Java source code which
 is available in (.javac file). The output of the compiler is platform independent (bytecode). The file which is
 generated after compilation is (.class file).
 Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM).
 Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.

what is class?
A. Class is basically blue print, user-defined data types that act as a template for creating objects of the identical type.
It represents the common properties and actions (functions) of an object.

What is object?
A. The object is a set block of code referred by name and ca be used later (an instance of a class).

What is the entry point of an application?
A. The main method is the entry point of an application .

Why main is static?
A. Main method is static so compiler can call it without the creation of an object or before the creation of an object
of the class.

Which class is the superclass of all classes?
A. Object is the superclass of all other classes we use.

What is difference between path and classpath variables?
A. Path is an environment variable which is used by the operating system to find the executables(.exe).
classPath is also an environment variable which is used by Application ClassLoader to locate and load the (.class files).

What is the difference between an Interface and Abstract class?
A. - An abstract class permits you to make functionality that subclasses can implement or override whereas an
interface only permits you to state functionality but not to implement it. A class can extend only one abstract
class while a class can implement multiple interfaces.
   - Interface is guideline for future, abstract class provides high level structure and live the implementations
    for subclasses.
   - Interface is 100% abstract while abstract class can have abstract and non abstract methods.
   - We cannot call something as private in interface, while in abstract class we can use private keyword.
   - In interface, we cannot have variables, in abstract class, we can have all kind of variables.
   - Abstract keyword is used to create abstract class whereas interface is the keyword for interfaces.
   - An interface reference can point to objects of its implementing classes.
   - An interface cannot implement another Interface. It can extends it.
   - At the time of declaration, interface variable must be initialized.
   - We can run an abstract class if it has main() method whereas we can’t run an interface.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
A.We cannot make and Object of the abstract class or an interface. We can only instantiate one of their
subclasses/implementers.

what is Access Specifier?
A. Specifier or access modifier access to  classes, fields and methods in Java. We have default, private,
protected and public.

What is OOP ? Define each feature of java OOP.
A. OOP stands for Object Oriented Programming.
   1-Inheritance:
In Java is the concept where the properties of one class can be inherited by the other. It helps to reuse
the code and establish a relationship between different classes. Inheritance is performed between two types of classes:
parent class (Super or Base class) Child class (Subclass or Derived class)
a class which inherits the properties is known as Child Class whereas a class whose properties are inherited is known
as Parent class.
   2-Encapsulation:
Encapsulation is a mechanism where you bind your data(variables) and code(methods) together as a single unit.The data is
hidden from the outer world and can be accessed only via current class methods.  This helps in protecting the data from
any unnecessary modification. We can achieve encapsulation in Java by:
 a)-Declaring the variables of a class as private.
 b)-Providing public setter and getter methods to modify and view the values of the variables.
   3-Polymorphism:
Polymorphism is a OOPs concept where one name can have many forms. (will example add)
for example, you have a smartphone for communication. The communication mode you choose could be anything. It can be
a call, a text message, a picture message, mail, etc. So, the goal is common that is communication, but their approach
is different. This is called Polymorphism. two types overriding and overloading.
   4-Abstraction:
Abstraction refers to the quality of dealing with ideas rather than events. It basically deals with hiding the details
and showing the essential things to the user. Thus you can say that abstraction in Java is the process of hiding the
implementation details from the user and revealing only the functionality to them.

What is Java Package and which package is imported by default?
A. Package is a namespace that organizes a set of related classes and interfaces.
 java.lang is the package that  is imported by default.

What is API? Name list of API that you have used so far.
A. Application Programming Interface (API) is a list of all classes that are part of the Java development kit (JDK).
It includes all Java packages, classes, and interfaces, along with their methods, fields, and constructors.
These pre-written classes provide a tremendous amount of functionality to a programmer.
I have used java.* package.

Does java support multiple inheritance, explain why or why not?
A. Java does not support multiple inheritances through classes because it leads to overriding of methods when both extended
class have a same method name. So one class can not extend 2 classes at the same time, but through in the interfaces we can
have multiple inheritance because one class can implements 2 interfaces .

What is method overloading and when it happens?
A. Methods of the same class shares the same name but each method must have a different number of parameters or parameters
having different types and order. All the methods must have a different signature.

Explain exceptions in java and how to handle it.
A. Exception is an abnormal condition which occurs during the execution of a program and disrupts normal flow of the program.
This exception must be handled properly. If it is not handled, program will be terminated abruptly.
Exceptions in java are handled using try, catch and finally blocks.
   1- try block : The code or set of statements which are to be monitored for exception are kept in this block.
   2- catch block : This block catches the exceptions occurred in the try block
   3- finally block : This block is always executed whether exception is occurred in the try block or not and occurred
exception is caught in the catch block or not.

What is static keyword in java? How it has been used in variables and methods ?
A. In Java, a static keyword is a member of a class that isn't associated with an instance of a class. Instead, the member
belongs to the class itself. As a result, you can access the static member without first creating a class instance.
Static keyword can be used with class level variables to make it global i.e all the objects will share the same variable.
Static keyword can be used with methods also. A static method can access only static variables of class and invoke only
static methods of the class.

What is final and how it has been used variables and methods?
A. final is a keyword used with Class to make sure no other class can extend it. We can use the final keyword with methods
to make sure child classes can’t override it. final keyword can be used with variables to make sure that it can be assigned
only once. However the state of the variable can be changed, for example, we can assign a final variable to an object only
once but the object variables can change later on. Java interface variables are by default final and static.

What is final, finally and finalize?
A. 1- final: is a keyword used to apply restrictions on class, method and variable. Final class can't be inherited,
final method can't be overridden and final variable value can't be changed.
2- finally: is a block used to place important code, it will be executed whether exception is handled or not.
3- finalize: is called by the garbage collector on an object when garbage collection determines that there are no
more references to the object.

What is a constructor ?
A. constructor refers to a block of code which is used to initialize an object. It must have the same name as that of the
class. Also, it has no return type and it is automatically called when an object is created.

Can we have multiple constructors in a class?
A. yes we can have multiple constructor (having different signature pattern).

If we don't have a constructor declared, what is called during the object creation?
A. A default constructor witch is created by Java  compiler.

What is "this" keyword in java ?
A. "this" keyword refers to the current object in a method or constructor. The most common use of the this keyword is to
eliminate the confusion between class attributes and parameters with the same name.

What is "super" keyword in java? How many possible way can you use?
A. The "super" keyword refers to superclass (parent) objects.
It is used to call superclass methods, and to access the superclass constructor.

What is JVM stand for ?
A. Java Virtual Machine.

Is JVM platform independent?
A. No, JVMs is not platform independent. In fact they are platform specific run time environment provided by the vendor.
it's depends on your kernel , and kernel is differ from OS (Operating System) to OS.Each platform
(Windows, UNIX, Mac etc) has its own JVM to run Java applications. Although the bytecode supports connection
to multiple databases.

What version of java are you using?
A. "17.0.1".

What is JAR stand for ?
A. JAR stands for "Java Archive". A JAR file is basically a zip-file which contains a couple of class files and a text files.

What is the difference between JDK and JVM?
A. - JDK contains JVM and whole other tools for java development inside it.
- JVM converts bytecode to machine code and execute it on machine.
There is no matching functionality between JDK and JVM.

What is the difference between JVM and JRE?
A. JRE is a software bundle that allows Java program to run, whereas JVM is an environment for executing bytecode.

What is compile time and run time?
A. Compile-time is the instance where the code you entered is converted to executable.
Run-time is the instance where the executable is running.

What is heap?
A. Runtime data area from which memory for all class instances and arrays are located. Java objects are stored in the heap.
It is created when the program is run, and its size may decrease or increase as your program runs.

How java manage it's memory?
A. The JVM loads the code, verifies the code, executes the code, manages memory(this includes allocating memory from the
Operating System (OS), managing Java allocation including heap compaction and removal of garbage objects) and finally
provides the runtime environment.

What is the difference between String, StringBuffer and StringBuilder?
A .String is immutable, if you try to alter their values, another object gets created.
StringBuffer and StringBuilder are mutable so they can change their values.
The difference between StringBuffer and StringBuilder is that StringBuffer is thread-safe.

What is Singleton class?
A. Singleton class is to control object creation by keeping private constructor so we can only instantiate one object.

What is Serialization and Deserialization?
A. Serialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database
or can be sent through streams.
The reverse process of creating object from sequence of bytes is called deserialization.

when to use transient variable in java?
A. Transient is a variables modifier used in serialization. At the time of serialization,if we don’t want to save value of
a particular variable in a file, then we use transient keyword

Difference between while and do..while loop?
A. While loop executes the code block only if the condition is True.
Do While loop, condition is tested at the end of the loop so Do While executes the statements in the code block at least
once even if the condition is false.

What is Enum?
A. An enum is a special "class" that represents a group of constants (unchangeable variables, like final variables).
To create an enum, use the enum keyword (instead of class or interface), and separate the constants with a comma.

What is Iterator?
A. An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet. It is called an
 "iterator" because "iterating" is the technical term for looping.

Which one will take more memory, an int or Integer?
A. integer take more memory; int is a primitive data type which takes 32 bits(4 bytes) to store.
Integer is an object which takes 128 bits (16 bytes) to store int value so each Integer object can occupy 4 (or more)
times the storage space as a primitive int.

Why is String Immutable in Java?
A. String class is immutable in order to achieve caching, security, synchronization,class loading and performance.

What is constructor chaining in Java?
A.Constructor chaining is the process of calling one constructor from another constructor with respect to current object.
Constructor chaining can be done in two ways:
  - Within same class: It can be done using this() keyword for constructors in same class
  - From base class: by using super() keyword to call constructor from the base class.

The difference between Serial and Parallel Garbage Collector?
A. Serial collector is a default copying collector which uses only one Garbage Collector thread for the GC operation,
  while a parallel collector uses multiple Garbage collector threads for the GC operation

What is JIT stands for?
A.Just In Time compilation. Tt is a way of executing computer code that involves compilation during execution of a
program – at run time – rather than before execution.

Explain Java Heap space and Garbage collection?
A. Java objects reside in an area called the heap. The heap is created when the JVM starts up and may increase or
decrease in size while the application runs. When the heap becomes full, garbage is collected. During the garbage
collection objects that are no longer used are cleared, thus making space for new objects.

Can you guarantee the garbage collection process?
A. No, Garbage collection does not guarantee that a program will not run out of memory.
Garbage collection (GC) handles most of the memory management and makes all possible attempts to make memory available
for the application but it does not guarantee that it will be able to provide it

What is the difference between stack and heap in Java?
A.1- The main difference between heap and stack is that stack memory is used to store local variables and function call
  while heap memory is used to store objects in Java.
  2- In a stack, the allocation and de-allocation are automatically done by whereas, in heap, it needs to be done by the
  programmer manually.
  3- Handling of Heap frame is costlier than the handling of the stack frame.
  4- Memory shortage problem is more likely to happen in stack whereas the main issue in heap memory is fragmentation.
  5- Stack frame access is easier than the heap frame as the stack have a small region of memory and is cache-friendly,
  but in case of heap frames which are dispersed throughout the memory so it causes more cache misses.
  6- A stack is not flexible, the memory size allotted cannot be changed whereas a heap is flexible, and the allotted
  memory can be altered.
  7- Accessing time of heap takes is more than a stack.

What is reflection in java and why is it useful?
A. Reflection in Java is the ability to examine and/or modify the properties or behavior of an object at run-time.
Java Reflection makes it possible to inspect classes, interfaces, fields and methods at runtime, without knowing the names
of the classes, methods etc. at compile time. It is also possible to instantiate new objects, invoke methods and get/set
field values using reflection.

what is multithreading in java?
A.Multithreading is a Java feature that allows concurrent execution of two or more parts of a program for maximum
utilization of CPU. Each part of such program is called a thread. So, threads are light-weight processes within a process.
Threads can be created by using two mechanisms :
1. Extending the Thread class
2. Implementing the Runnable Interface

What is the use of synchronization in Java?
A.Synchronized keyword in Java is used to provide mutually exclusive access to a shared resource with multiple
threads in Java.Synchronization in Java guarantees that no two threads can execute a synchronized method which
requires the same lock simultaneously or concurrently.

What is Framework?
A. A framework is a platform for developing software applications. For example, a framework may include predefined
classes and functions that can be used to process input, manage hardware devices, and interact with system software.

What are the testing Framework available in java?
A. - JUnit
   - TestNG
   - JBehave
   - Serenity
   - Selenide
   - HTTPUnit
   - JWebUnit

Difference between jUnit and testNG?
A. TestNG is quite similar to JUnit, but with added functionalities and features such as parallel test execution,
   parameterization, and more. It is inspired by JUnit and NUnit.

What are the dependencies for this project?
A. 1 <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
   <dependency>
   <groupId>mysql</groupId>
   <artifactId>mysql-connector-java</artifactId>
   <version>8.0.27</version>
   </dependency>
   2 <!-- https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver -->
     <dependency>
     <groupId>org.mongodb</groupId>
     <artifactId>mongo-java-driver</artifactId>
     <version>3.12.10</version>
     </dependency>
    3 <!-- https://mvnrepository.com/artifact/junit/junit -->
     <dependency>
     <groupId>junit</groupId>
     <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
      </dependency>
      <maven.compiler.source>17</maven.compiler.source>
      <maven.compiler.target>17</maven.compiler.target>

what is dependency injection in java?
A. Dependency injection is a technique that allows the client code to be independent from the services it is relying on.
The client does not control how objects of the services are created - it works with an implementation of the service through
interface. This is somewhat in inverse to trivial programming so dependency injection is also called inversion of control.

What is static binding and dynamic binding?
A. static binding in Java occurs during compile time while dynamic binding occurs during runtime.
Overloaded methods are resolved (deciding which method to be called when there are multiple methods with same name)
using static binding while overridden methods using dynamic binding, i.e, at run time.